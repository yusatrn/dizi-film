"use strict";(self.webpackChunkfilm_dizi_oneri=self.webpackChunkfilm_dizi_oneri||[]).push([[76],{8543:(n,v,r)=>{r.d(v,{f:()=>a});var s=r(4438),o=r(3366);let a=(()=>{class t{constructor(e){this.apiService=e}getPopularMovies(e=1){return this.apiService.getPopularMovies(e)}getPopularTvShows(e=1){return this.apiService.getPopularTvShows(e)}getMovieDetails(e){return this.apiService.getMovieDetails(e)}getTvShowDetails(e){return this.apiService.getTvDetails(e)}getMovieCredits(e){return this.apiService.getMovieCredits(e)}getTvCredits(e){return this.apiService.getTvCredits(e)}getMovieVideos(e){return this.apiService.getMovieVideos(e)}getTvVideos(e){return this.apiService.getTvVideos(e)}getSimilarMovies(e){return this.apiService.getSimilarMovies(e)}getSimilarTvShows(e){return this.apiService.getSimilarTvShows(e)}getMovieReviews(e){return this.apiService.getMovieReviews(e)}getTvReviews(e){return this.apiService.getTvReviews(e)}getTvSeasons(e,i){return this.apiService.getTvSeasons(e,i)}searchContent(e,i=1){return this.apiService.searchContent(e,i)}getMovieGenres(){return this.apiService.getMovieGenres()}getTvGenres(){return this.apiService.getTvGenres()}getMoviesByGenre(e,i=1){return this.apiService.getMoviesByGenre(e,i)}getTvShowsByGenre(e,i=1){return this.apiService.getTvShowsByGenre(e,i)}static{this.\u0275fac=function(i){return new(i||t)(s.KVO(o.G))}}static{this.\u0275prov=s.jDH({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})()}}]);